// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PAFIAST_IMS.Data;

#nullable disable

namespace PAFIAST_IMS.Migrations
{
    [DbContext(typeof(PAFIAST_IMSContext))]
    partial class PAFIAST_IMSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PAFIAST_IMS.Models.AssignTask", b =>
                {
                    b.Property<int>("ATId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ATId"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Evaluation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tasks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("stdinfoid")
                        .HasColumnType("int");

                    b.HasKey("ATId");

                    b.HasIndex("stdinfoid");

                    b.ToTable("AssignTask_IMS");
                });

            modelBuilder.Entity("PAFIAST_IMS.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PAFIAST_IMS.Models.FacultyAdvisor", b =>
                {
                    b.Property<int>("FAId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FAId"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FacultyAdvisorContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacultyAdvisorDept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacultyAdvisorDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacultyAdvisorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacultyAdvisorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("stdinfoid")
                        .HasColumnType("int");

                    b.HasKey("FAId");

                    b.HasIndex("stdinfoid");

                    b.ToTable("FacultyAdvisor_IMS");
                });

            modelBuilder.Entity("PAFIAST_IMS.Models.FormC", b =>
                {
                    b.Property<int>("FormCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormCId"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("End_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("IE_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("I_Dept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("I_Semester")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Joining_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("stdinfoid")
                        .HasColumnType("int");

                    b.HasKey("FormCId");

                    b.HasIndex("stdinfoid")
                        .IsUnique();

                    b.ToTable("FormC_IMS");
                });

            modelBuilder.Entity("PAFIAST_IMS.Models.IEForm", b =>
                {
                    b.Property<int>("IEFId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IEFId"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("P2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("stdinfoid")
                        .HasColumnType("int");

                    b.HasKey("IEFId");

                    b.HasIndex("stdinfoid")
                        .IsUnique();

                    b.ToTable("IEForm_IMS");
                });

            modelBuilder.Entity("PAFIAST_IMS.Models.stdInfo", b =>
                {
                    b.Property<int>("stdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("stdId"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("stdAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stdCNIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stdContact_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stdDept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stdFatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stdName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stdReg_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("stdId");

                    b.ToTable("stdInfo_IMS");
                });

            modelBuilder.Entity("PAFIAST_IMS.Models.Supervisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SupervisorContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupervisorDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupervisorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupervisorIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupervisorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("stdinfoid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("stdinfoid")
                        .IsUnique();

                    b.ToTable("Supervisor_IMS");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PAFIAST_IMS.Models.AssignTask", b =>
                {
                    b.HasOne("PAFIAST_IMS.Models.stdInfo", "stdinfo")
                        .WithMany("AssignTasks")
                        .HasForeignKey("stdinfoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("stdinfo");
                });

            modelBuilder.Entity("PAFIAST_IMS.Models.FacultyAdvisor", b =>
                {
                    b.HasOne("PAFIAST_IMS.Models.stdInfo", "stdinfo")
                        .WithMany("FacultyAdvisors")
                        .HasForeignKey("stdinfoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("stdinfo");
                });

            modelBuilder.Entity("PAFIAST_IMS.Models.FormC", b =>
                {
                    b.HasOne("PAFIAST_IMS.Models.stdInfo", "stdinfo")
                        .WithOne("FormCs")
                        .HasForeignKey("PAFIAST_IMS.Models.FormC", "stdinfoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("stdinfo");
                });

            modelBuilder.Entity("PAFIAST_IMS.Models.IEForm", b =>
                {
                    b.HasOne("PAFIAST_IMS.Models.stdInfo", "stdinfo")
                        .WithOne("IEForms")
                        .HasForeignKey("PAFIAST_IMS.Models.IEForm", "stdinfoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("stdinfo");
                });

            modelBuilder.Entity("PAFIAST_IMS.Models.Supervisor", b =>
                {
                    b.HasOne("PAFIAST_IMS.Models.stdInfo", "stdinfo")
                        .WithOne("Supervisors")
                        .HasForeignKey("PAFIAST_IMS.Models.Supervisor", "stdinfoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("stdinfo");
                });

            modelBuilder.Entity("PAFIAST_IMS.Models.stdInfo", b =>
                {
                    b.Navigation("AssignTasks");

                    b.Navigation("FacultyAdvisors");

                    b.Navigation("FormCs")
                        .IsRequired();

                    b.Navigation("IEForms")
                        .IsRequired();

                    b.Navigation("Supervisors")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
